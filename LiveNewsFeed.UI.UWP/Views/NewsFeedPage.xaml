<views:BasePage x:Class="LiveNewsFeed.UI.UWP.Views.NewsFeedPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:api8="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:i="using:Microsoft.Xaml.Interactivity"
                xmlns:vm="using:LiveNewsFeed.UI.UWP.ViewModels"
                xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
                xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                xmlns:mtuc="using:Microsoft.Toolkit.Uwp.UI.Controls"
                xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
                xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
                xmlns:common="using:LiveNewsFeed.UI.UWP.Common"
                xmlns:controls="using:LiveNewsFeed.UI.UWP.Controls"
                xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
                xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                xmlns:views="using:LiveNewsFeed.UI.UWP.Views"
                xmlns:app="using:LiveNewsFeed.UI.UWP"
                mc:Ignorable="d"
                Background="{ThemeResource CustomAcrylicBackgroundBrush}"
                ui:TitleBarExtensions.ButtonBackgroundColor="Transparent"
                NavigationCacheMode="Enabled"
                DataContext="{x:Bind ViewModel}">
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:CompareStateTrigger Value="{Binding Path=(controls:ScrollViewerExtensions.VerticalScrollOffset), ElementName=NewsFeed}" To="100" Comparison="LessThanOrEqual" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BackToTopButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:CompareStateTrigger Value="{Binding Path=(controls:ScrollViewerExtensions.VerticalScrollOffset), ElementName=NewsFeed}" To="0" Comparison="GreaterThan" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BackToTopButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  News Feed  -->
        <RefreshContainer Visibility="{x:Bind Path=ViewModel.ArePostsLoadingAutomatically,
                                              Mode=TwoWay,
                                              Converter={StaticResource InverseBoolToVisibilityConverter}}"
                          RefreshRequested="RefreshContainer_OnRefreshRequested">
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="RefreshRequested">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.RefreshNewsFeedCommand}"/>
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <RefreshContainer.Visualizer>
                <RefreshVisualizer>
                    <RefreshVisualizer.Content>
                        <SymbolIcon Symbol="Refresh" />
                    </RefreshVisualizer.Content>
                </RefreshVisualizer>
            </RefreshContainer.Visualizer>
            <controls:CustomGridView x:Name="NewsFeed"
                                     SelectionMode="None"
                                     Padding="0 100 0 40"
                                     ItemsSource="{x:Bind ViewModel.ArticlePosts}">
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>

                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="Margin" Value="25 5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </GridView.ItemContainerStyle>

                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="vm:NewsArticlePostViewModel">
                        <!--  Article post  -->
                        <StackPanel Orientation="Vertical"
                                HorizontalAlignment="Stretch"
                                Padding="10">
                            <!--  Data source - Logo, Title, Social post logo, Categories and Publish time  -->
                            <Grid Margin="0 0 0 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!--  Logo  -->
                                <Border Grid.Column="0"
                                        Height="20"
                                        Width="20"
                                        Margin="0 0 5 0"
                                        BorderBrush="Transparent"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"
                                        CornerRadius="2"
                                        x:Name="LogoBorder">
                                    <Border.Background>
                                        <ImageBrush>
                                            <ImageBrush.ImageSource>
                                                <BitmapImage UriSource="{x:Bind NewsFeedLogo.FilePath.AbsoluteUri, Mode=OneWay}"
                                                             DecodePixelHeight="{Binding Height, ElementName=LogoBorder}"
                                                             DecodePixelWidth="{Binding Width, ElementName=LogoBorder}" />
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Border.Background>
                                </Border>
                                <!--  News feed name  -->
                                <TextBlock Grid.Column="1"
                                           Text="{x:Bind NewsFeedName}"
                                           HorizontalTextAlignment="Left"
                                           FontWeight="Bold"
                                           FontSize="14"/>
                                <!--  Social post logo  -->
                                <mtuc:ImageEx Grid.Column="2"
                                              x:Name="SocialPostLogo"
                                              x:Load="{x:Bind common:UiHelpers.IsNotNull(SocialPost)}"
                                              x:Phase="1"
                                              Source="{x:Bind SocialPost.SocialSiteLogo}"
                                              Height="20"
                                              Width="20"
                                              Margin="15 0"
                                              HorizontalAlignment="Left"
                                              IsCacheEnabled="True"
                                              ToolTipService.ToolTip="{x:Bind SocialPost.ToolTip}"/>
                                <!--  Categories  -->
                                <ItemsControl Grid.Column="3"
                                              x:Name="CategoriesPanel"
                                              x:Load="{x:Bind HasCategories}"
                                              x:Phase="1"
                                              ItemsSource="{x:Bind Categories}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate x:DataType="vm:CategoryViewModel">
                                            <StackPanel Orientation="Horizontal"
                                                        UseLayoutRounding="True"
                                                        VerticalAlignment="Center"
                                                        Margin="0 0 10 0">
                                                <FontIcon Glyph="{x:Bind IconGlyph}"
                                                          FontFamily="{x:Bind FontFamily}"
                                                          FontSize="12"
                                                          Margin="0 0 3 0">
                                                    <FontIcon.Foreground>
                                                        <SolidColorBrush Color="{x:Bind Color, Mode=OneWay}" />
                                                    </FontIcon.Foreground>
                                                </FontIcon>
                                                <TextBlock Text="{x:Bind Name}"
                                                       FontSize="12">
                                                    <TextBlock.Foreground>
                                                        <SolidColorBrush Color="{x:Bind Color, Mode=OneWay}" />
                                                    </TextBlock.Foreground>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <!--  Is Important flag  -->
                                <TextBlock x:Name="IsPostImportantFlag"
                                           x:Uid="ArticlePost_IsPostImportantFlag"
                                           x:Load="{x:Bind IsImportant}"
                                           Grid.Column="4"
                                           Text="&#x2757;"
                                           FontFamily="Segoe UI Emoji"
                                           IsColorFontEnabled="True"
                                           Margin="0 0 5 0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center" />
                                <!--  Publish time  -->
                                <TextBlock Grid.Column="5"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="SemiLight"
                                           Text="{x:Bind PublishTime, Converter={StaticResource DateTimeFormatter}, ConverterParameter=T}"/>
                            </Grid>

                            <!--  Article post image % content  -->
                            <Grid Margin="0 5 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--  Article title  -->
                                <TextBlock Grid.Row="0"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Margin="0 0 0 5"
                                           Text="{x:Bind Title}"
                                           TextAlignment="Left"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis"
                                           IsTextSelectionEnabled="True"
                                           FontSize="16"
                                           FontWeight="SemiBold"
                                           ToolTipService.ToolTip="{x:Bind Title}"
                                           Visibility="{x:Bind Title, Converter={StaticResource EmptyStringToVisibilityConverter}}" />

                                <!--  Article post image  -->
                                <mtuc:ImageEx Grid.Row="1"
                                              Grid.Column="0"
                                              x:Name="ArticlePostImage"
                                              x:Load="{x:Bind common:UiHelpers.IsNotNull(Image)}"
                                              x:Phase="2"
                                              Margin="0 5 10 0"
                                              IsCacheEnabled="True"
                                              EnableLazyLoading="True"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              ToolTipService.ToolTip="{x:Bind Image.Title}"
                                              PointerPressed="ArticlePostImageThumbnail_OnPointerPressed">
                                    <mtuc:ImageEx.Source>
                                        <BitmapImage DecodePixelWidth="180"
                                                     UriSource="{x:Bind Image.NormalImageUrl}"/>
                                    </mtuc:ImageEx.Source>
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="PointerPressed">
                                            <core:EventTriggerBehavior.Actions>
                                                <core:InvokeCommandAction Command="{x:Bind ShowImagePreviewCommand}"/>
                                            </core:EventTriggerBehavior.Actions>
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </mtuc:ImageEx>

                                <!--  Article post Content  -->
                                <TextBlock Grid.Row="1"
                                           Grid.Column="1"
                                           controls:TextBlockExtensions.FormattedText="{x:Bind Content}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Justify"
                                           IsTextSelectionEnabled="True"
                                           Margin="0 0 0 0"
                                           x:Phase="1"/>

                                <!--  Article post Extended content  -->
                                <TextBlock Grid.Row="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           x:Name="ArticlePostExtendedContent"
                                           Margin="0 10 0 0"
                                           TextWrapping="Wrap"
                                           TextAlignment="Justify"
                                           IsTextSelectionEnabled="True"
                                           Visibility="Collapsed"
                                           controls:TextBlockExtensions.FormattedText="{x:Bind ExtendedContent}"/>
                            </Grid>

                            <!--  Tags & Actions button  -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <i:Interaction.Behaviors>
                                    <core:DataTriggerBehavior Binding="{x:Bind HasTags}" Value="True">
                                        <core:ChangePropertyAction PropertyName="Margin"
                                                                   Value="0 10 5 0"/>
                                    </core:DataTriggerBehavior>
                                    <core:DataTriggerBehavior Binding="{x:Bind HasTags}" Value="False">
                                        <core:ChangePropertyAction PropertyName="Margin"
                                                                   Value="0 2 0 0"/>
                                    </core:DataTriggerBehavior>
                                </i:Interaction.Behaviors>

                                <StackPanel Grid.Column="0"
                                            Orientation="Vertical"
                                            x:Name="TagsPanel"
                                            x:Load="{x:Bind HasTags}">
                                    <!--  Tags  -->
                                    <ItemsControl ItemsSource="{x:Bind Tags}"
                                                  x:Phase="1">
                                        <ItemsControl.Template>
                                            <ControlTemplate>
                                                <ScrollViewer HorizontalScrollMode="Auto"
                                                              HorizontalScrollBarVisibility="Hidden"
                                                              VerticalScrollMode="Disabled"
                                                              VerticalScrollBarVisibility="Disabled"
                                                              Padding="{TemplateBinding Padding}">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate x:DataType="vm:TagViewModel">
                                                <Button UseLayoutRounding="True"
                                                        CornerRadius="8"
                                                        Margin="0 0 5 0"
                                                        Padding="7 3"
                                                        FontSize="12">
                                                    <Button.Background>
                                                        <AcrylicBrush TintColor="{ThemeResource SystemAccentColor}"
                                                                      TintOpacity="0.6"/>
                                                    </Button.Background>

                                                    <StackPanel Orientation="Horizontal">
                                                        <FontIcon Glyph="&#xE8EC;"
                                                                  FontSize="12"
                                                                  FontWeight="Medium"
                                                                  Margin="0 0 5 0"/>
                                                        <TextBlock Text="{x:Bind Name}"
                                                                   FontSize="12"
                                                                   FontWeight="Medium"/>
                                                    </StackPanel>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>

                                <!--  Show extended content button  -->
                                <Button Grid.Column="1"
                                        x:Name="ShowExtendedContentButton"
                                        x:Uid="ArticlePost_ShowExtendedContentButton"
                                        x:Load="{x:Bind common:UiHelpers.IsNotNull(ExtendedContent)}"
                                        Style="{ThemeResource ButtonRevealStyle}"
                                        Background="Transparent"
                                        Padding="7 2"
                                        Margin="5 0 0 0"
                                        VerticalAlignment="Bottom">
                                    <FontIcon x:Name="ShowExtendedContentButtonIcon"
                                              Glyph="&#xE70D;"
                                              FontSize="16" />

                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Click">
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=ArticlePostExtendedContent}"
                                                                       PropertyName="Visibility"
                                                                       Value="{Binding Visibility, Converter={StaticResource InvertVisibilityConverter}, ElementName=ArticlePostExtendedContent}" />
                                        </core:EventTriggerBehavior>
                                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=ArticlePostExtendedContent}"
                                                                  Value="Visible">
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=ShowExtendedContentButtonIcon}"
                                                                       PropertyName="Glyph"
                                                                       Value="&#xE70E;" />
                                        </core:DataTriggerBehavior>
                                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=ArticlePostExtendedContent}"
                                                                  Value="Collapsed">
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=ShowExtendedContentButtonIcon}"
                                                                       PropertyName="Glyph"
                                                                       Value="&#xE70D;" />
                                        </core:DataTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Button>

                                <!--  Open Actions button  -->
                                <Button Grid.Column="2"
                                        x:Uid="ArticlePost_ActionsButton"
                                        Margin="5 0 0 0"
                                        Padding="5 0"
                                        Style="{ThemeResource ButtonRevealStyle}"
                                        Background="Transparent"
                                        VerticalAlignment="Bottom">
                                    <FontIcon Glyph="&#xE10C;"/>

                                    <!--  Actions  -->
                                    <Button.Flyout>
                                        <MenuFlyout Placement="TopEdgeAlignedRight">
                                            <MenuFlyoutItem x:Uid="ArticlePost_Actions_ShareArticleButton"
                                                        Command="{x:Bind ShareArticleCommand}">
                                                <MenuFlyoutItem.Icon>
                                                    <FontIcon Glyph="&#xE72D;" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem x:Uid="ArticlePost_Actions_CopyLinkButton"
                                                        Command="{x:Bind CopyArticleUrlToClipboardCommand}">
                                                <MenuFlyoutItem.Icon>
                                                    <FontIcon Glyph="&#xE16F;" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem x:Uid="ArticlePost_Actions_OpenInBrowserButton"
                                                        Command="{x:Bind OpenFullArticleCommand}">
                                                <MenuFlyoutItem.Icon>
                                                    <FontIcon Glyph="&#xE8A7;" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutSeparator />
                                            <MenuFlyoutItem x:Name="OpenSocialPostPreviewButton"
                                                        x:Uid="ArticlePost_Actions_OpenSocialPostPreviewButton"
                                                        x:Load="{x:Bind common:UiHelpers.IsNotNull(SocialPost)}"
                                                        Command="{x:Bind OpenSocialPostPreviewCommand}">
                                                <MenuFlyoutItem.Icon>
                                                    <FontIcon Glyph="&#xE125;" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem x:Uid="ArticlePost_Actions_OpenArticlePreviewButton"
                                                        Command="{x:Bind OpenArticlePreviewCommand}">
                                                <MenuFlyoutItem.Icon>
                                                    <FontIcon Glyph="&#xE12A;" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </Button.Flyout>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </GridView.ItemTemplate>

                <GridView.Footer>
                    <!--  'Load older posts' Button  -->
                    <Button Style="{ThemeResource AccentButtonStyle}"
                            FontWeight="SemiBold"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="0 10 0 20"
                            Command="{x:Bind ViewModel.LoadOlderPostsCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Download"
                                        Margin="0 0 10 0"/>
                            <TextBlock x:Uid="NewsFeed_LoadOlderPostsButton" />
                        </StackPanel>
                    </Button>
                </GridView.Footer>
            </controls:CustomGridView>
        </RefreshContainer>

        <!--  'Back to Top' Button  -->
        <Button x:Name="BackToTopButton"
                x:Uid="NewsFeed_BackToTopButton"
                CornerRadius="100"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"                
                UseLayoutRounding="True"
                Padding="15"
                Margin="0 0 25 60"
                Style="{ThemeResource AccentButtonStyle}">
            <Button.Background>
                <AcrylicBrush BackgroundSource="Backdrop"
                              TintOpacity="0.75"
                              TintColor="{ThemeResource SystemAccentColor}"/>
            </Button.Background>
            
            <FontIcon Glyph="&#xE110;" />

            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation Duration="0:0:0.5" From="0" To="1" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation Duration="0:0:0.5" From="1" To="0" />
            </animations:Implicit.HideAnimations>

            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Click">
                    <core:CallMethodAction TargetObject="{Binding ElementName=NewsFeed}"
                                           MethodName="ScrollToTop" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </Button>

        <!--  Loading placeholder  -->
        <StackPanel Orientation="Vertical"
                    Visibility="{x:Bind Path=ViewModel.ArePostsLoadingAutomatically,
                                        Mode=TwoWay,
                                        Converter={StaticResource BoolToVisibilityConverter}}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <muxc:ProgressRing IsActive="True"
                               Margin="10"/>
            <TextBlock x:Uid="NewsFeed_LoadingLabel"
                       FontSize="20"
                       FontWeight="Medium"
                       Margin="5"/>
        </StackPanel>
        
        <!--  Bottom Menu bar  -->
        <CommandBar VerticalAlignment="Bottom"
                    Background="{ThemeResource CustomAcrylicElementBrush}"
                    IsDynamicOverflowEnabled="True"
                    DefaultLabelPosition="Right"
                    OverflowButtonVisibility="Collapsed">
            <!--  App info (on the left side)  -->
            <CommandBar.Content>
                <AppBarButton x:Uid="NewsFeed_AppInfoButton"
                              Style="{ThemeResource AppBarButtonRevealStyle}"
                              AllowFocusOnInteraction="True"
                              Width="45">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE946;" />
                    </AppBarButton.Icon>

                    <AppBarButton.Flyout>
                        <Flyout api8:ShouldConstrainToRootBounds="False">
                            <StackPanel Orientation="Vertical"
                                        Margin="5">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="13" />
                                    </Style>
                                </StackPanel.Resources>
                                <!--  App logo & name  -->
                                <StackPanel Orientation="Horizontal"
                                            Margin="0 5">
                                    <Image Source="../Assets/Logos/app-logo.png"
                                           MaxWidth="35"
                                           Margin="0 0 5 0" />
                                    <TextBlock FontSize="18"
                                               FontWeight="ExtraBold"
                                               Text="{x:Bind app:ApplicationInfo.ApplicationName}"
                                               VerticalAlignment="Center" />
                                </StackPanel>

                                <!--  Version, author, license, links etc.  -->
                                <TextBlock Margin="5">
                                    <Run Text="{x:Bind app:ApplicationInfo.AppVersion}"
                                         FontSize="14"
                                         FontWeight="Bold"/>
                                    <LineBreak/>
                                    <Run Text="{x:Bind app:ApplicationInfo.BuildDate, Converter={StaticResource DateTimeFormatter}, ConverterParameter=d}"
                                         FontSize="11">
                                        <Run.Foreground>
                                            <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}" />
                                        </Run.Foreground>
                                    </Run>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Run x:Uid="AppInfo_CreatedBy"/>
                                    <Run Text="{x:Bind app:ApplicationInfo.Author}"
                                         FontWeight="SemiBold"/>
                                    <LineBreak/>
                                    <Hyperlink NavigateUri="mailto:supermartzin@gmail.com"
                                               Foreground="{x:Bind ViewModel.HyperlinkAccentColor, Mode=OneWay}">
                                        <Run x:Uid="AppInfo_SendEmailToAuthor"
                                             FontSize="12"/>    
                                    </Hyperlink>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Run x:Uid="AppInfo_License" />
                                    <Hyperlink NavigateUri="https://choosealicense.com/licenses/gpl-3.0/"
                                               Foreground="{x:Bind ViewModel.HyperlinkAccentColor, Mode=OneWay}">GNU GPLv3</Hyperlink>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Run x:Uid="AppInfo_SourceCode"
                                         FontWeight="SemiBold" />
                                    <LineBreak/>
                                    <Hyperlink NavigateUri="https://github.com/supermartzin/live-news-feed-windows"
                                               Foreground="{x:Bind ViewModel.HyperlinkAccentColor, Mode=OneWay}">
                                        <Run x:Uid="AppInfo_Repository"/>
                                    </Hyperlink>
                                    <LineBreak/>
                                    <Hyperlink NavigateUri="https://github.com/supermartzin/live-news-feed-windows/network/dependencies"
                                               Foreground="{x:Bind ViewModel.HyperlinkAccentColor, Mode=OneWay}">
                                        <Run x:Uid="AppInfo_ThirdPartyLibraries" />
                                    </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.Content>

            <!--  Settings menu  -->
            <AppBarButton x:Uid="NewsFeed_OpenSettingsButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Icon="Setting"
                          AllowFocusOnInteraction="True">
                <AppBarButton.Flyout>
                    <Flyout x:Name="SettingsMenuFlyout"
                            api8:ShouldConstrainToRootBounds="False">
                        <StackPanel Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style x:Key="TitleStyle" TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                    <Setter Property="FontSize" Value="18" />
                                </Style>

                                <Style x:Key="SectionPanelStyle" TargetType="StackPanel">
                                    <Setter Property="Margin" Value="5 5 5 10" />
                                </Style>
                            </StackPanel.Resources>

                            <!--  Automatic Feed refresh Settings  -->
                            <StackPanel Orientation="Vertical"
                                        Style="{StaticResource SectionPanelStyle}">
                                <TextBlock x:Uid="SettingsMenu_AutomaticUpdatesTitle"
                                           Style="{StaticResource TitleStyle}" />

                                <!--  Refresh ON/OFF  -->
                                <ToggleSwitch x:Uid="SettingsMenu_AutomaticUpdatesSwitch"
                                              IsOn="{x:Bind ViewModel.SettingsMenu.AutomaticUpdates, Mode=TwoWay}"
                                              Margin="10 0 0 5" />

                                <!--  Refresh Interval  -->
                                <ComboBox x:Uid="SettingsMenu_AutomaticUpdatesInterval"
                                          SelectedItem="{x:Bind ViewModel.SettingsMenu.AutomaticUpdatesInterval, Mode=TwoWay}"
                                          Margin="10 0 0 0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource AutomaticUpdatesIntervalValueConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                    <!--  Interval values  -->
                                    <x:Double>30</x:Double>
                                    <x:Double>60</x:Double>
                                    <x:Double>120</x:Double>
                                    <x:Double>300</x:Double>
                                    <x:Double>600</x:Double>
                                    <x:Double>900</x:Double>
                                    <x:Double>1800</x:Double>
                                </ComboBox>
                            </StackPanel>

                            <!--  Notifications Settings  -->
                            <StackPanel Orientation="Vertical"
                                        Style="{StaticResource SectionPanelStyle}">
                                <TextBlock x:Uid="SettingsMenu_NotificationsTitle"
                                           Style="{StaticResource TitleStyle}" />

                                <!--  Notifications ON/OFF  -->
                                <ToggleSwitch x:Uid="SettingsMenu_NotificationsSwitch"
                                              IsOn="{x:Bind ViewModel.SettingsMenu.NotificationsTurnedOn, Mode=TwoWay}"
                                              Margin="10 0 0 5" />

                                <!--  Notify on important posts only ON/OFF  -->
                                <ToggleSwitch x:Uid="SettingsMenu_NotifyOnImportantPostsOnlySwitch"
                                              IsOn="{x:Bind ViewModel.SettingsMenu.NotifyOnlyOnImportantPosts, Mode=TwoWay}"
                                              Margin="10 0 0 0" />
                            </StackPanel>

                            <!--  News Feed Display Settings  -->
                            <StackPanel Orientation="Vertical"
                                        Style="{StaticResource SectionPanelStyle}">
                                <TextBlock x:Uid="SettingsMenu_NewsFeedDisplayTitle"
                                           Style="{StaticResource TitleStyle}" />

                                <!--  Show important posts only ON/OFF  -->
                                <ToggleSwitch x:Uid="SettingsMenu_ShowOnlyImportantPostsSwitch"
                                              IsOn="{x:Bind ViewModel.SettingsMenu.ShowOnlyImportantPosts, Mode=TwoWay}"
                                              Margin="10 5 0 0"/>
                            </StackPanel>

                            <!--  Application Settings  -->
                            <StackPanel Orientation="Vertical"
                                        Margin="5">
                                <TextBlock x:Uid="SettingsMenu_ApplicationSettingsTitle"
                                           Style="{StaticResource TitleStyle}" />

                                <!--  Display Language  -->
                                <ComboBox x:Uid="SettingsMenu_DisplayLanguages"
                                          SelectedItem="{x:Bind ViewModel.SettingsMenu.DisplayLanguageCode, Mode=TwoWay}"
                                          Margin="10 5 0 5">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource LanguageCodesConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                    <!--  Language values  -->
                                    <x:String>en</x:String>
                                    <x:String>sk</x:String>
                                </ComboBox>

                                <!--  Application Theme  -->
                                <ComboBox x:Uid="SettingsMenu_ApplicationTheme"
                                          ItemsSource="{x:Bind ViewModel.SettingsMenu.ApplicationThemeNames}"
                                          SelectedItem="{x:Bind ViewModel.SettingsMenu.ApplicationThemeName, Mode=TwoWay}"
                                          SelectionChanged="ThemesComboBox_OnSelectionChanged"
                                          Margin="10 0 0 0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource ApplicationThemeValuesConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <!--  Refresh feed  -->
            <AppBarButton x:Uid="NewsFeed_RefreshFeedButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Icon="Refresh"
                          Command="{x:Bind ViewModel.RefreshNewsFeedCommand}" />
        </CommandBar>

        <!--  App Title  -->
        <Grid x:Name="NewsFeedTitleBar"
              VerticalAlignment="Top"
              Background="{ThemeResource CustomAcrylicElementBrush}">
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center">
                <Image MaxWidth="60"
                       Margin="25 20 5 15"
                       Source="../Assets/Logos/app-logo.png"/>
                <TextBlock x:Uid="NewsFeed_NewsFeedTitle"
                           FontSize="30"
                           FontWeight="ExtraBold"
                           Margin="5 30 25 20" />
            </StackPanel>
            <muxc:ProgressBar VerticalAlignment="Bottom"
                              IsIndeterminate="True"
                              Background="Transparent"
                              Visibility="{x:Bind Path=ViewModel.ArePostsLoadingManually,
                                                  Mode=OneWay,
                                                  Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>

        <!--  Article Image preview overlay  -->
        <Grid x:DefaultBindMode="OneWay"
              x:Name="ArticleImagePreviewOverlay"
              x:Load="{x:Bind common:UiHelpers.IsNotNull(ViewModel.SelectedPost)}"
              Visibility="{x:Bind ViewModel.SelectedPost, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid.Background>
                <media:BackdropBlurBrush Amount="7"
                                         FallbackColor="{ThemeResource SystemBaseHighColor}"/>
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="ImagePreviewTitleBar"
                  Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Background="Transparent"/>

            <!--  Close, Info and Open in browser buttons  -->
            <StackPanel Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Grid.RowSpan="3"
                        Orientation="Vertical"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Margin="10 20 20 10">
                <!--  Close  -->
                <Button x:Uid="ImagePreview_CloseButton"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        Click="CloseImagePreviewButton_OnClick">
                    <FontIcon Glyph="&#xE106;"
                              FontSize="16"/>
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:EventTriggerBehavior.Actions>
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SelectedPost.HideImagePreviewCommand}" />
                            </core:EventTriggerBehavior.Actions>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>

                <!--  Open in browser  -->
                <Button x:Uid="ImagePreview_OpenInBrowserButton"
                        Command="{x:Bind ViewModel.SelectedPost.OpenImageInBrowserCommand}"
                        Margin="0 5 0 0"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right">
                    <FontIcon Glyph="&#xE8A7;"
                              FontSize="16"/>
                </Button>

                <!--  Info  -->
                <Button x:Uid="ImagePreview_ImageInfoButton"
                        x:Name="ImageInfoButton"
                        x:Load="{x:Bind common:UiHelpers.IsNotNull(ViewModel.SelectedPost.Image.Title), FallbackValue=True}"
                        Visibility="{x:Bind ViewModel.SelectedPost.Image.Title, FallbackValue=Collapsed, Converter={StaticResource NullToVisibilityConverter}}"
                        Margin="0 5 0 0"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right">
                    <FontIcon Glyph="&#xE946;"
                              FontSize="16"/>
                    <Button.Flyout>
                        <Flyout Placement="Left"
                                AreOpenCloseAnimationsEnabled="True">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                    <Setter Property="CornerRadius" Value="4"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <TextBlock Text="{x:Bind ViewModel.SelectedPost.Image.Title}"
                                       TextWrapping="Wrap"
                                       Margin="5"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>

            <!--  Image  -->
            <ScrollViewer x:Name="ZoomPanel" 
                          Grid.Row="2"
                          Grid.Column="1"
                          ZoomMode="Enabled"
                          MinZoomFactor="0.75"
                          MaxZoomFactor="2.0"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          DoubleTapped="ZoomPanel_OnDoubleTapped">
                <mtuc:DropShadowPanel BlurRadius="40"
                                      ShadowOpacity="0.5"
                                      OffsetX="0"
                                      OffsetY="0"
                                      Color="{ThemeResource SystemBaseHighColor}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Width="{Binding Path=ActualWidth, Mode=OneWay, ElementName=ZoomPanel}"
                                      Height="{Binding Path=ActualHeight, Mode=OneWay, ElementName=ZoomPanel}"
                                      IsMasked="True">
                    <mtuc:ImageEx Stretch="Uniform"
                                  IsCacheEnabled="True">
                        <mtuc:ImageEx.Source>
                            <BitmapImage x:Name="BitmapImage"
                                         CreateOptions="IgnoreImageCache"
                                         UriSource="{x:Bind ViewModel.SelectedPost.Image.LargeImageUrl}" 
                                         ImageOpened="BitmapImage_OnImageOpened"
                                         ImageFailed="BitmapImage_OnImageFailed"/>
                        </mtuc:ImageEx.Source>
                    </mtuc:ImageEx>
                </mtuc:DropShadowPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</views:BasePage>
