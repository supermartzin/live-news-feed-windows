<views:BasePage x:Class="LiveNewsFeed.UI.UWP.Views.NewsFeedPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:i="using:Microsoft.Xaml.Interactivity"
                xmlns:vm="using:LiveNewsFeed.UI.UWP.ViewModels"
                xmlns:ext="using:Microsoft.Toolkit.Uwp.UI.Extensions"
                xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                xmlns:mtuc="using:Microsoft.Toolkit.Uwp.UI.Controls"
                xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
                xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
                xmlns:controls="using:LiveNewsFeed.UI.UWP.Controls"
                xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
                xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                xmlns:views="using:LiveNewsFeed.UI.UWP.Views"
                mc:Ignorable="d"
                Background="{ThemeResource CustomAcrylicBackgroundBrush}"
                ext:TitleBarExtensions.ButtonBackgroundColor="Transparent"
                NavigationCacheMode="Enabled"
                DataContext="{x:Bind ViewModel}">

    <Page.Resources>
        <Style x:Key="CustomExpanderHeaderStyle"
               TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.QuickSettings.NotificationsTurnedOn, Mode=OneWay}" To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NotificationsToggleButton.Label" Value="{Binding Path=Text, ElementName=NotificationsOn}" />
                        <Setter Target="NotificationsToggleButton.Background" Value="{ThemeResource AccentAcrylicElementBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.QuickSettings.NotificationsTurnedOn, Mode=OneWay}" To="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NotificationsToggleButton.Label" Value="{Binding Path=Text, ElementName=NotificationsOff}" />
                        <Setter Target="NotificationsToggleButton.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.QuickSettings.ShowOnlyImportantPosts, Mode=OneWay}" To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OnlyImportantPostsToggleButton.Label" Value="{Binding Path=Text, ElementName=OnlyImportantOn}" />
                        <Setter Target="OnlyImportantPostsToggleButton.Background" Value="{ThemeResource AccentAcrylicElementBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.QuickSettings.ShowOnlyImportantPosts, Mode=OneWay}" To="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OnlyImportantPostsToggleButton.Label" Value="{Binding Path=Text, ElementName=OnlyImportantOff}" />
                        <Setter Target="OnlyImportantPostsToggleButton.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:CompareStateTrigger Value="{Binding Path=(controls:ScrollViewerExtensions.VerticalScrollOffset), ElementName=NewsFeed}" To="100" Comparison="LessThanOrEqual" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BackToTopButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:CompareStateTrigger Value="{Binding Path=(controls:ScrollViewerExtensions.VerticalScrollOffset), ElementName=NewsFeed}" To="0" Comparison="GreaterThan" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BackToTopButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  News Feed  -->
        <controls:CustomGridView x:Name="NewsFeed"
                                 SelectionMode="None"
                                 Padding="0 100 0 40"
                                 Visibility="{x:Bind Path=ViewModel.AllPostsLoading,
                                                     Mode=TwoWay,
                                                     Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                 ItemsSource="{x:Bind ViewModel.ArticlePosts}"
                                 ScrollViewChanged="NewsFeed_OnScrollViewChanged">
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>

            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Margin" Value="25 5"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </GridView.ItemContainerStyle>

            <GridView.ItemTemplate>
                <DataTemplate x:DataType="vm:NewsArticlePostViewModel">
                    <!--  Article post  -->
                    <StackPanel Orientation="Vertical"
                                HorizontalAlignment="Stretch"
                                Padding="10">
                        <!--  Data source - Logo, Title, Categories and Publish time  -->
                        <Grid Margin="0 0 0 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--  Logo  -->
                            <Border Grid.Column="0"
                                    Height="20"
                                    Width="20"
                                    Margin="0 0 5 0"
                                    Background="{x:Bind NewsFeedLogo}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="2"
                                    x:Phase="1"/>
                            <!--  Title  -->
                            <TextBlock Grid.Column="1" Text="{x:Bind Title}"
                                       HorizontalTextAlignment="Left"
                                       FontWeight="Bold"
                                       FontSize="14"/>
                            <!--  Categories  -->
                            <ItemsControl Grid.Column="2"
                                          ItemsSource="{x:Bind Categories}"
                                          x:Phase="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="vm:CategoryViewModel">
                                        <StackPanel Orientation="Horizontal"
                                                        UseLayoutRounding="True"
                                                        VerticalAlignment="Center"
                                                        Margin="0 0 10 0">
                                            <FontIcon Glyph="{x:Bind IconGlyph}"
                                                          FontFamily="{x:Bind FontFamily}"
                                                          FontSize="12"
                                                          Margin="0 0 3 0">
                                                <FontIcon.Foreground>
                                                    <SolidColorBrush Color="{x:Bind Color, Mode=OneWay}" />
                                                </FontIcon.Foreground>
                                            </FontIcon>
                                            <TextBlock Text="{x:Bind Name}"
                                                           FontSize="12">
                                                <TextBlock.Foreground>
                                                    <SolidColorBrush Color="{x:Bind Color, Mode=OneWay}" />
                                                </TextBlock.Foreground>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <!--  Publish time  -->
                            <TextBlock Grid.Column="3"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       FontSize="12"
                                       FontWeight="Light"
                                       Text="{x:Bind PublishTime, Converter={StaticResource DateTimeFormatter}, ConverterParameter=T}"/>
                        </Grid>

                        <!--  Article post image % content  -->
                        <Grid Margin="0 5 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--  Article post image  -->
                            <Image Grid.Column="0"
                                   MaxWidth="180"
                                   Margin="0 0 10 0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Visibility="{x:Bind Path=Image, Converter={StaticResource NullToVisibilityConverter}}"
                                   ToolTipService.ToolTip="{x:Bind Image.Title}"
                                   PointerPressed="ArticlePostImageThumbnail_OnPointerPressed"
                                   x:Phase="2">
                                <Image.Source>
                                    <BitmapImage UriSource="{x:Bind Image.NormalImageUrl}"/>
                                </Image.Source>
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="PointerPressed">
                                        <core:EventTriggerBehavior.Actions>
                                            <core:InvokeCommandAction Command="{x:Bind ShowImagePreviewCommand}"/>
                                        </core:EventTriggerBehavior.Actions>
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </Image>

                            <!--  Article post Content  -->
                            <TextBlock Grid.Column="1"
                                       Text="{x:Bind Content}"
                                       TextWrapping="Wrap"
                                       TextAlignment="Justify"
                                       IsTextSelectionEnabled="True"
                                       x:Phase="1"/>
                        </Grid>

                        <!--  Social post Content, Tags & Actions button  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0"
                                        Orientation="Vertical">
                                <!--  Social post Content  -->
                                <mtuc:Expander Margin="0 10 0 0"
                                               HorizontalContentAlignment="Stretch"
                                               ExpandDirection="Down"
                                               IsExpanded="False"
                                               Expanded="Expander_OnExpanded"
                                               Collapsed="Expander_OnCollapsed"
                                               HeaderStyle="{StaticResource CustomExpanderHeaderStyle}"
                                               Visibility="{x:Bind SocialPostContent, Converter={StaticResource NullToVisibilityConverter}}"
                                               x:Phase="3">
                                    <WebView controls:WebExtensions.HtmlString="{x:Bind SocialPostContent}"
                                             DefaultBackgroundColor="Transparent"
                                             Height="100"/>
                                </mtuc:Expander>

                                <!--  Tags  -->
                                <ItemsControl ItemsSource="{x:Bind Tags}"
                                              Visibility="{x:Bind Tags, Converter={StaticResource EmptyCollectionToVisibilityConverter}}"
                                              Margin="0 10 5 0"
                                              x:Phase="1">
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <ScrollViewer HorizontalScrollMode="Auto"
                                                          HorizontalScrollBarVisibility="Hidden"
                                                          VerticalScrollMode="Disabled"
                                                          VerticalScrollBarVisibility="Disabled"
                                                          Padding="{TemplateBinding Padding}">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate x:DataType="vm:TagViewModel">
                                            <Button UseLayoutRounding="True"
                                                    Margin="0 0 5 0"
                                                    Padding="3"
                                                    Style="{ThemeResource ButtonRevealStyle}"
                                                    FontSize="12">
                                                <Button.Background>
                                                    <AcrylicBrush TintColor="{ThemeResource SystemAccentColor}"
                                                              TintOpacity="0.7"/>
                                                </Button.Background>

                                                <StackPanel Orientation="Horizontal">
                                                    <FontIcon Glyph="&#xE8EC;"
                                                              FontSize="12"
                                                              FontWeight="Medium"
                                                              Margin="0 0 5 0"/>
                                                    <TextBlock Text="{x:Bind Name}"
                                                               FontSize="12"
                                                               FontWeight="Medium"/>
                                                </StackPanel>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>

                            <Button Grid.Column="1"
                                    x:Uid="ArticlePost_ActionsButton"
                                    Margin="5 0 0 0"
                                    Padding="5 0"
                                    Style="{ThemeResource ButtonRevealStyle}"
                                    Background="Transparent"
                                    FontSize="12"
                                    VerticalAlignment="Bottom">
                                <FontIcon Glyph="&#xE10C;"/>

                                <Button.Flyout>
                                    <MenuFlyout Placement="TopEdgeAlignedRight">
                                        <MenuFlyoutItem x:Uid="ArticlePost_Actions_OpenInBrowserButton"
                                                        Command="{x:Bind OpenFullArticleCommand}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8A7;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </GridView.ItemTemplate>
        </controls:CustomGridView>

        <!--  'Back to Top' Button  -->
        <Button x:Name="BackToTopButton"
                x:Uid="NewsFeed_BackToTopButton"
                CornerRadius="100"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"                
                UseLayoutRounding="True"
                Padding="15"
                Margin="0 0 25 60"
                BorderThickness="2"
                BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
                Style="{ThemeResource AccentButtonStyle}"
                Click="BackToTopButton_OnClick">
            <Button.Background>
                <AcrylicBrush BackgroundSource="Backdrop"
                              TintOpacity="0.75"
                              TintColor="{ThemeResource SystemAccentColor}"/>
            </Button.Background>
            <FontIcon Glyph="&#xE110;" />
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation Duration="0:0:0.5" From="0" To="1" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation Duration="0:0:0.5" From="1" To="0" />
            </animations:Implicit.HideAnimations>
        </Button>

        <!--  Loading placeholder  -->
        <StackPanel Orientation="Vertical"
                    Visibility="{x:Bind Path=ViewModel.AllPostsLoading,
                                        Mode=TwoWay,
                                        Converter={StaticResource BoolToVisibilityConverter}}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <muxc:ProgressRing IsActive="True"
                               Margin="10"/>
            <TextBlock x:Uid="NewsFeed_LoadingLabel"
                       FontSize="20"
                       FontWeight="Medium"
                       Margin="5"/>
        </StackPanel>
        
        <!--  Bottom Menu bar  -->
        <CommandBar VerticalAlignment="Bottom"
                    Background="{ThemeResource CustomAcrylicElementBrush}"
                    IsDynamicOverflowEnabled="True"
                    DefaultLabelPosition="Right">
            <AppBarButton x:Name="OnlyImportantPostsToggleButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Command="{x:Bind ViewModel.QuickSettings.ShowOnlyImportantPostsCommand}">
                <FontIcon Glyph="&#xE730;"/>
            </AppBarButton>
            <AppBarButton x:Name="NotificationsToggleButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Command="{x:Bind ViewModel.QuickSettings.TurnOnNotificationsCommand}">
                <FontIcon Glyph="&#xEA8F;"/>
            </AppBarButton>
            <AppBarButton x:Uid="NewsFeed_OpenSettingsButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Icon="Setting"
                          IsEnabled="False" />
            <AppBarButton x:Uid="NewsFeed_RefreshFeedButton"
                          Style="{ThemeResource AppBarButtonRevealStyle}"
                          Icon="Refresh"
                          Command="{x:Bind ViewModel.RefreshNewsFeedCommand}" />
        </CommandBar>

        <!--  App Title  -->
        <Grid x:Name="NewsFeedTitleBar"
              VerticalAlignment="Top"
              Background="{ThemeResource CustomAcrylicElementBrush}">
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center">
                <Image MaxWidth="60"
                       Margin="25 20 5 15"
                       Source="../Assets/Logos/app-logo.png"/>
                <TextBlock x:Uid="NewsFeed_NewsFeedTitle"
                           FontSize="30"
                           FontWeight="ExtraBold"
                           Margin="5 30 25 20" />
            </StackPanel>
            <muxc:ProgressBar VerticalAlignment="Bottom"
                              IsIndeterminate="True"
                              Background="Transparent"
                              Visibility="{x:Bind Path=ViewModel.NewPostsLoading,
                                                  Mode=OneWay,
                                                  Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>

        <!--  Article Image preview overlay  -->
        <Grid x:DefaultBindMode="OneWay"
              Visibility="{x:Bind ViewModel.SelectedPost, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid.Background>
                <media:BackdropBlurBrush Amount="7"
                                         FallbackColor="{ThemeResource SystemBaseHighColor}"/>
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="ImagePreviewTitleBar"
                  Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Background="Transparent"/>

            <!--  Close, Info and Open in browser buttons  -->
            <StackPanel Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Grid.RowSpan="3"
                        Orientation="Vertical"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Margin="10 20 20 10">
                <!--  Close  -->
                <Button x:Uid="ImagePreview_CloseButton"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        Click="CloseImagePreviewButton_OnClick">
                    <FontIcon Glyph="&#xE106;"
                              FontSize="16"/>
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:EventTriggerBehavior.Actions>
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SelectedPost.HideImagePreviewCommand}" />
                            </core:EventTriggerBehavior.Actions>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>

                <!--  Open in browser  -->
                <Button x:Uid="ImagePreview_OpenInBrowserButton"
                        Command="{x:Bind ViewModel.SelectedPost.OpenImageInBrowserCommand}"
                        Margin="0 5 0 0"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right">
                    <FontIcon Glyph="&#xE8A7;"
                              FontSize="16"/>
                </Button>

                <!--  Info  -->
                <Button x:Uid="ImagePreview_ImageInfoButton"
                        Margin="0 5 0 0"
                        Padding="10"
                        Style="{ThemeResource ButtonRevealStyle}"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        Visibility="{x:Bind ViewModel.SelectedPost.Image.Title, Converter={StaticResource NullToVisibilityConverter}}">
                    <FontIcon Glyph="&#xE946;"
                              FontSize="16"/>
                    <Button.Flyout>
                        <Flyout Placement="Left"
                                AreOpenCloseAnimationsEnabled="True">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                    <Setter Property="CornerRadius" Value="4"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <TextBlock Text="{x:Bind ViewModel.SelectedPost.Image.Title}"
                                       TextWrapping="Wrap"
                                       Margin="5"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>

            <!--  Image  -->
            <ScrollViewer x:Name="ZoomPanel" 
                          Grid.Row="2"
                          Grid.Column="1"
                          ZoomMode="Enabled"
                          MinZoomFactor="0.75"
                          MaxZoomFactor="2.0"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          DoubleTapped="ZoomPanel_OnDoubleTapped">
                <mtuc:DropShadowPanel BlurRadius="40"
                                      ShadowOpacity="0.5"
                                      OffsetX="0"
                                      OffsetY="0"
                                      Color="{ThemeResource SystemBaseHighColor}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Width="{Binding Path=ActualWidth, Mode=OneTime, ElementName=ZoomPanel}"
                                      Height="{Binding Path=ActualHeight, Mode=OneTime, ElementName=ZoomPanel}"
                                      IsMasked="True">
                    <Image Stretch="Uniform">
                        <Image.Source>
                            <BitmapImage CreateOptions="IgnoreImageCache"
                                         UriSource="{x:Bind ViewModel.SelectedPost.Image.LargeImageUrl}" />
                        </Image.Source>
                    </Image>
                </mtuc:DropShadowPanel>
            </ScrollViewer>
        </Grid>

        <!--  Hidden helper elements  -->
        <TextBlock x:Name="NotificationsOn"
                   x:Uid="NewsFeed_Settings_NotificationsOn"
                   Visibility="Collapsed"/>
        <TextBlock x:Name="NotificationsOff"
                   x:Uid="NewsFeed_Settings_NotificationsOff"
                   Visibility="Collapsed"/>
        <TextBlock x:Name="OnlyImportantOn"
                   x:Uid="NewsFeed_Settings_OnlyImportantOn"
                   Visibility="Collapsed"/>
        <TextBlock x:Name="OnlyImportantOff"
                   x:Uid="NewsFeed_Settings_OnlyImportantOff"
                   Visibility="Collapsed"/>
    </Grid>
</views:BasePage>
